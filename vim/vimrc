" sourcing some additional files
so ~/dotfiles/vim/.credencials
so ~/dotfiles/vim/plugins.vim
so ~/dotfiles/vim/functions.vim
so ~/dotfiles/vim/snippets.vim


let g:ActualTicket = "INTS-3787"


set noswapfile

let g:airline_powerline_fonts = 1
let vim_markdown_preview_github=1
let mapleader = ","
let g:mapleader = ","
let g:castrlp_use_caching = 1
let g:NERDTreeHijackNetrw = 0

hi MatchParen cterm=none ctermbg=green ctermfg=blue
syntax on
" set font color fir code comments to gray 
hi Comment guifg=#5C6370 ctermfg=59

let g:airline_theme='bubblegum'
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'unique_tail'






set tags+=~/tags,$DOC/tags,./.tags/tags,./.git/tags,../tags/tags


set backupdir=~/.vim/backup//
set directory=~/.vim/swap//
set undodir=~/.vim/undo//


set path+=**
set clipboard=unnamedplus
set nu
set number relativenumber
set hlsearch
set incsearch
set ignorecase
set smartcase
set hidden
set nobackup
set nowritebackup
set updatetime=300
set shortmess+=c
set numberwidth=4 
" save buffer on switch 
set autowrite
set tabstop=4 softtabstop=4 expandtab shiftwidth=4 shiftround smarttab
set cmdheight=2 
" "set fillchars+=vert:│    
augroup numbertoggle
    autocmd!
    autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
    autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
augroup END

augroup PatchDiffHighlight
    autocmd! 
    autocmd FileType diff           syntax enable
augroup END


" fzf ripgrep
set completeopt=longest,menuone

command! -bang -nargs=* Rg
            \ call fzf#vim#grep(
            \   'rg --column --line-number --no-heading --color=always --ignore-case <q-args>, 5,
            \   <bang>0 ? fzf#vim#with_preview('up:60%')
            \           : fzf#vim#with_preview('right:50%:hidden', '?'),
            \   <bang>0)


let g:tmux_navigator_no_mappings = 1

let g:NERDTreeDirArrowExpandable = "├"
let g:NERDTreeDirArrowCollapsible = "╰"
let NERDTreeQuitOnOpen = 0
let g:NERDTreeWinSize=60

autocmd CursorHold * silent call CocActionAsync('highlight')

let g:quickr_preview_on_cursor = 1
let g:quickr_preview_exit_on_enter = 1

au! BufNewFile,BufReadPost *.{yaml,yml} set filetype=yaml foldmethod=indent
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab

augroup pandoc_syntax
    au! BufNewFile,BufFilePre,BufRead *.md set filetype=markdown.pandoc
augroup END

inoremap <Left>  <NOP>
inoremap <Right> <NOP>
inoremap <Up>    <NOP>
inoremap <Down>  <NOP>
nnoremap <Left>  <NOP>
nnoremap <Right> <NOP>
nnoremap <Up>    <NOP>
nnoremap <Down>  <NOP>
let g:vimspector_enable_mappings = 'HUMAN'
colorscheme wal 

so ~/dotfiles/vim/mappings.vim

